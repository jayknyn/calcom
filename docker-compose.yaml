# Use postgres/example user/password credentials
version: '3.8'

volumes:
  calcom-build-db:

networks:
  calcom:
    internal: true
    name: calcom

services:
  db:
    container_name: calcom-db
    image: postgres:15.2-alpine
    restart: unless-stopped
    volumes:
      - calcom-build-db:/var/lib/postgresql/data/
    env_file: .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - TZ
    networks:
      - calcom

  calcom:
    container_name: calcom-app
    image: jayknyn/calcom:arm64
    build:
      context: .
      platforms:
        - 'linux/arm64'
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_WEBAPP_URL: ${NEXT_PUBLIC_WEBAPP_URL}
        NEXT_PUBLIC_LICENSE_CONSENT: ${NEXT_PUBLIC_LICENSE_CONSENT}
        CALCOM_TELEMETRY_DISABLED: ${CALCOM_TELEMETRY_DISABLED}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        CALENDSO_ENCRYPTION_KEY: ${CALENDSO_ENCRYPTION_KEY}
        DATABASE_URL: ${DATABASE_URL}
      network: calcom
    restart: always
    networks:
      - calcom
    ports:
      - 3000:3000
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
    depends_on:
      - db

  # Optional use of Prisma Studio. In production, comment out or remove the section below to prevent unwanted access to your database.
  # studio:
  #   image: jayknyn/calcom:arm64
  #   restart: always
  #   networks:
  #     - calcom
  #   ports:
  #     - 5555:5555
  #   env_file: .env
  #   environment:
  #     - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
  #   depends_on:
  #     - db
  #   command:
  #     - npx
  #     - prisma
  #     - studio
# END SECTION: Optional use of Prisma Studio.
